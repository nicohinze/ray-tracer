name: C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  clang-tidy-check:
    name: clang-tidy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang++-19 clang-tidy-19 cmake ninja-build
    - name: Configure with clang-tidy
      run: |
        cmake -S . -B build \
          -G Ninja \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE \
          -DCMAKE_BUILD_TYPE=Debug \
          -DRAY_TRACER_BUILD_CLANG_TIDY=ON
    - name: Build with clang-tidy
      run: cmake --build build
    - name: Run clang-tidy
      run: find src tests \( -name '*.cpp' -o -name '*.hpp' \) | xargs -P $(nproc) -n 1 clang-tidy-19 -p build -header-filter='^(src|tests)/.*'

  coverage-report:
    name: Coverage report
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ lcov ninja-build
    - name: Configure with coverage flags
      run: |
        cmake -S . -B build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DRAY_TRACER_BUILD_TESTS=ON \
          -DRAY_TRACER_BUILD_COVERAGE=ON
    - name: Build and run tests
      run: |
        cmake --build build
        cd build
        ctest --output-on-failure
    - name: Generate coverage report
      run: |
        cd build
        ninja coverage_report
